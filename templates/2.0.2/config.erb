# This is SubGit configuration file.
#
# SubGit is a tool for instant and transparent SVN/Git synchronization.
#
# Please visit http://www.subgit.com/ for more information on SubGit,
# new versions and online support.

#
# General options
#
[core]
        # When core.shared is set to 'true', all files will be made group-writable.
        #
        # You MUST set this option to 'true' when more than one system account is used
        # to work with this repository (e.g. Apache for Subversion and SSH for Git).
        # All these accounts MUST then share the same primary group.
        shared = false

        # Path to the directory where logs are stored.
        logs = subgit/logs

        # File path to write error reports to.
        errorReport = subgit/error

        # Path to the authors mapping file.
        #
        # This file uses git-svn format, as described at 'http://www.kernel.org/pub/software/scm/git/docs/git-svn.html'
        # and consists of the lines in the following format:
        #
        #   svnUser = Git User <user@example.com>
        #
        # This file is optional, when it is not present Git and Subversion users are mapped automatically.
        authorsFile = subgit/authors.txt

        # Encoding to be used to store paths in Git tree objects.
        pathEncoding = UTF-8

        # Domain to be used to generate Git committer name by SVN committer name
        # if there's no corresponding rule in authors file (see 'authorsFile' option).
        # Generated Git committer name for domain 'example.com' has the following format:
        #
        #   svnUser <svnUser@example.com>
        #
        # If no domain is specified, empty e-mail address will be used.
        defaultDomain = <%= scope.lookupvar('::fqdn') %>

#
# Subversion to Git mapping options
#
[svn]
        # Subversion repository URL
        url = <%= @svn_repo %>

        # Layout that describes how to map Subversion directory that represent trunk, branch or tag
        # to the corresponding Git reference and vice versa.
        #
        # Explicit correspondence is set up between trunk directory and master reference ('trunk' option)
        # and simple patterns are used to map branches and tags ('branches' and 'tags' options).
        #
        # Shelves are special branches used internally by SubGit to represent anonymous Git branches.
        # Shelves mapping is defined by the 'shelves' option.
        #
        # Generic mapping syntax is:
        #
        #     <Subversion-Path-Pattern>:<Git-Reference-Pattern>
        #
        # Explicit paths in place of patterns are used for trunk to master mapping.
        #
        # Subversion paths being matched against patterns are relative to the translation root
        # defined above.
        #
        # Pattern may only include single asterisk (*) as its last segment.
        # For example, patterns "branches/*", "branches/myproject/*", "branches/branchname" are supported,
        # and "branches/*/myproject", "branches/*/*", and "branches/release-*" are not supported.
        trunk = trunk:refs/heads/master
        branches = branches/*:refs/heads/*
        tags = tags/*:refs/tags/*
        shelves = shelves/*:refs/shelves/*

        # Interval between checks for new changes in Subversion repository in seconds.
        fetchInterval = <%= @fetch_interval_secs %>

        # Subversion connection establishment timeout in seconds.
        connectTimeout = 30

        # Subversion connection read timeout in seconds.
        readTimeout = 60

        # enable HTTP requests spooling to prevent server-side timeout when request processing takes long time.
        httpSpooling = false

        # When 'git.keepGitCommitTime' is set to 'true', SVN commits will have the same dates
        # as corresponding Git commits, even if this violates monotonic increase of commit dates from revision to revision.
        # As a side effect some features that rely on dates order like 'revision dates' may work incorrectly
        # (see http://svnbook.red-bean.com/en/1.7/svn.tour.revs.specifiers.html for 'revision dates' feature explanation).
        #
        # When 'git.keepGitCommitTime' is set to false, SubGit will try to preserve Git commit dates while translation to SVN,
        # as it is possible, but it will guarantee SVN dates to increase monotonically from revision to revision.
        keepGitCommitTime = false

        # Comma-separated list of [auth] sections ids where Subversion credentials are defined.
        # Credentials will be used both for read-only and write operations, and it is recommended to
        # define credentials of an account that has full access to the Subversion repository.
        auth = default

#
# Subversion authentication options.
# Valid options in this section are:
#
#    passwords: path to the file that contains user/password pairs;
#
#    userName: explicit user name to use to log into Subversion repository;
#
#    password: password to use with the explicitly specified user name;
#
#    sshKeyFile: for svn+ssh protocol, SSH private key to use; OpenSSH format is supported;
#    sshKeyFilePassphrase: passphrase to use to read SSH private key;
#
#    sslClientCertFile: for SSL protocol, client SSL client certificate to use; PKSC#12 format is supported;
#    sslClientCertPassphrase: passphrase to use to read SSL client certificate;
#
#    subversionConfigurationDirectory: path to Subversion configuration directory or '@default@' to use
#                                      current user Subversion configuration and credentials cache.
#
[auth "default"]
        # Passwords file path. Passwords file contains user name/password pairs that should be
        # used to log into Subversion repository.
        passwords = subgit/passwd
        useDefaultSubversionConfigurationDirectory = false
        subversionConfigurationDirectory = /root/.subversion

#
# Options specific to the background translation process.
#
[daemon]
        # Pid file path.
        pidFile = subgit/daemon.pid

        # Timeout in seconds; background translation process exits
        # after being idle for the specified amount of seconds.
        #
        # 0 seconds timeout means that translation process exits immediately.
        #
        # Larger timeout values may improve translation performance by reducing
        # translation process startup overhead.
        idleTimeout = infinity

        # Explicit translation process classpath or path to the directory
        # that contains jars that have to be on the process classpath.
        classpath = subgit/lib
